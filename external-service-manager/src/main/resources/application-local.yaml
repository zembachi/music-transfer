external:
  service:
    spotify:
      # урл для создания редикерта на спотифай. необходимо указывать без https
      url: accounts.spotify.com
      # урл для авторизации в спотифае
      feign-auth-url: https://${external.service.spotify.url}
      # урл для вызова всех апи методов спотифая
      feign-api-url: https://api.spotify.com
      # редикерт, который возвращается спотифаем при согласии пользователя. должен совпадать с тем, что указано в профиле приложения в спотифае
      redirect-url: http://localhost:8085/spotify/confirm
      # требуемые привилегии для получения информации о пользователе в спотифае. посмотреть тут https://developer.spotify.com/documentation/web-api/concepts/scopes
      scope: user-read-private user-read-email
      # тип ответа от спотифая при получении access token
      response-type: code
      # ид приложения в спотифае
      client-id: 5994e4b6d192496db93865521495a3ee
      # за сколько минут до окончания жизни токена обновить его. например если стоит 5 мин, то при жизни токена в 60 минут приложение обновит его за 55 минут
      token-refresh-offset: 300000
    vk-music:
      url: vk test
server:
  port: 8085
spring:
  datasource:
    # говорим спрингу, чтобы настроил нам датасорс для встроенной бд h2
    embedded-database-connection: h2
    url: jdbc:h2:mem:test_mem;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;INIT=CREATE SCHEMA IF NOT EXISTS TEST\;SET SCHEMA TEST\;create user if not exists LIQUIBASE_USER password 'password' admin
  # включаем доступ к консоли h2 ( localhost:{server.port}/h2-console )
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
  liquibase:
    default-schema: TEST
    password: password
    user: LIQUIBASE_USER
    change-log: classpath:/db/changelog/db.changelog-master.xml

logging:
  level:
    com.music.transfer.external.manager.feign.SpotifyAuthFeignClient: DEBUG
feign:
  client:
    config:
      spotify-auth:
        loggerLevel: FULL


